{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1zZbU5QXY3ZEtfsKWHQC-JGRhxn7rwGmd","timestamp":1731577230567}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО"],"metadata":{"id":"8hJfL9b2l439"}},{"cell_type":"code","source":["# Абрамов Семён"],"metadata":{"id":"wRnqvYOkl6EX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Дисклеймер"],"metadata":{"id":"weOtPwPQmgpD"}},{"cell_type":"markdown","source":["В данной практике вам необходимо применить все ваши знания по темам:\n","\n","- Функции\n","- Словари\n","- Списки\n","- Множества\n","- Условные конструкции\n","- Запросы\n","\n","и все что было изучено на прошлых практических занятиях\n","\n","В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно"],"metadata":{"id":"LznB3uscmjDa"}},{"cell_type":"markdown","source":["# Задание 0"],"metadata":{"id":"7nSJIqkTvC_C"}},{"cell_type":"markdown","source":["Создайте функцию по нахождению уникальных элементов из двух списков\n","\n","\n","\n","```\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","```\n","\n"],"metadata":{"id":"exACjTiVvGUe"}},{"cell_type":"code","source":["def get_unique_elements(list1, list2):\n","    unique_elements = set(list1 + list2)\n","    return list(unique_elements)\n","\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","\n","result = get_unique_elements(a, b)\n","print(result)"],"metadata":{"id":"dQheNSYd4nd2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"SVWNlBALpCNo"}},{"cell_type":"markdown","source":["Симулятор виртуального питомца\n","\n","Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.\n","\n","Требования:\n","\n","- Функция для усыновления питомца (имя, тип, возраст).\n","- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.\n","- Функция для отображения состояния питомца (голод, радость, энергия)."],"metadata":{"id":"RcKA-VEqpC7f"}},{"cell_type":"code","source":["from random import randint\n","import time\n","import os\n","\n","\n","def screensaver():\n","    clear()\n","    for i in range(5):\n","        print(\" _\")\n","        print(\"( \\ \")\n","        print(\" \\ \\ \")\n","        print(\" / /                |\\\\\")\n","        print(\"/ /     .-`````-.   / ^`-.\")\n","        print(\"\\ \\    /         \\_/  (|) `o\")\n","        print(\" \\ \\  /   .---.   \\\\ _  ,--'\")\n","        print(\"  \\ \\/   /     \\,  \\( `^^^\")\n","        print(\"   \\   \\/\\      (\\  )\")\n","        print(\"    \\   ) \\     ) \\ \\ \")\n","        print(\"     ) /__ \\__  ) (\\ \\___\")\n","        print(\"    (___)))__))(__))(__)))\")\n","\n","        time.sleep(0.2)\n","        clear()\n","\n","        print(\"     _ \")\n","        print(\"    / ) \")\n","        print(\"   / /  \")\n","        print(\"  / /               /\\ \")\n","        print(\" / /     .-```-.   / ^`-.  \")\n","        print(\" \\ \\    /       \\_/  (|) `o \")\n","        print(\"  \\ \\  /   .-.   \\\\ _  ,--' \")\n","        print(\"   \\ \\/   /   )   \\( `^^^  \")\n","        print(\"    \\   \\/    (    )  \")\n","        print(\"     \\   )     )  /     \")\n","        print(\"      ) /__    | (__  \")\n","        print(\"     (___)))   (__)))\")\n","\n","        time.sleep(0.2)\n","        clear()\n","    return\n","\n","\n","def main_load():\n","    print(\"Добро пожаловать в\")\n","    print(\"╔═══╗╔═══╗╔════╗   ╔╗  ╔══╗╔╗ ╔╗╔══╗ ╔╗\")\n","    print(\"║╔═╗║║╔══╝╚═╗╔═╝   ║║  ║╔╗║║╚═╝║║╔╗╚╗║║\")\n","    print(\"║╚═╝║║╚══╗  ║║     ║║  ║╚╝║║╔╗ ║║║╚╗║║║\")\n","    print(\"║╔══╝║╔══╝  ║║     ║║  ║╔╗║║║╚╗║║║ ║║╚╝\")\n","    print(\"║║   ║╚══╗  ║║     ║╚═╗║║║║║║ ║║║╚═╝║╔╗\")\n","    print(\"╚╝   ╚═══╝  ╚╝     ╚══╝╚╝╚╝╚╝ ╚╝╚═══╝╚╝\")\n","\n","    time.sleep(5)\n","\n","\n","def new_pet(pets_and_status):\n","    clear()\n","    name = input('Введите имя питомца: ')\n","    genus = input('Выберите вид животного:\\n1 - Собака\\n2 - Кошка\\n3 - Снеговик\\n')\n","\n","    if genus == '1':\n","        genus = 'Собака'\n","        health = [5, 10]\n","        hunger = [10, 20]\n","        happiness = [35, 40]\n","\n","        print(\"Вы создали собаку!\")\n","    elif genus == '2':\n","        genus = 'Кошка'\n","        health = [4, 8]\n","        hunger = [15, 25]\n","        happiness = [20, 30]\n","\n","        print(\"Вы создали кота!\")\n","    elif genus == '3':\n","        genus = 'Снеговик'\n","        health = [4, 6]\n","        hunger = [4, 10]\n","        happiness = [9, 13]\n","\n","        print(\"Вы создали снеговика!\")\n","    else:\n","        print('Такого варианта нет!')\n","\n","    time.sleep(2)\n","\n","    pets_and_status.append([name, randint(health[0], health[1]), randint(hunger[0], hunger[1]), randint(happiness[0], happiness[1]), health[1], hunger[1], happiness[1], genus])\n","\n","    return pets_and_status\n","\n","\n","def eating(pets_and_status):\n","    time.sleep(1)\n","    clear()\n","\n","    if pets_and_status[1][2] == pets_and_status[1][5]:\n","        print('Ваш питомец полностью накормлен!')\n","\n","    elif pets_and_status[1][7] == \"Снеговик\":\n","        print(\"А как кормить снеговика...\")\n","\n","    else:\n","        if pets_and_status[1][7] == \"Собака\":\n","            print(\"1 - Накормить его котлетами! (+5)\\n2 - Накормить его стейком! (+10)\\n3 - Накормить его пельменями! (+15)\")\n","        if pets_and_status[1][7] == \"Кошка\":\n","            print(\"1 - Накормить его шпротами! (+5)\\n2 - Накормить его мышами! (+10)\\n3 - Накормить его лазаньей! (+15)\")\n","\n","        a = int(input())\n","\n","        if a == 1:\n","            if pets_and_status[1][2] + 5 > pets_and_status[1][5]:\n","                print(\"Ваш питомец перекормлен!\")\n","                pets_and_status[1][2] = pets_and_status[1][5]\n","            else:\n","                pets_and_status[1][2] += 5\n","                print('Ему понравилось!')\n","\n","        elif a == 2:\n","            if pets_and_status[1][2] + 10 > pets_and_status[1][5]:\n","                print(\"Ваш питомец перекормлен!\")\n","                pets_and_status[1][2] = pets_and_status[1][5]\n","            else:\n","                pets_and_status[1][2] += 10\n","                print('Ему понравилось!')\n","\n","        elif a == 3:\n","            if pets_and_status[1][2] + 15 > pets_and_status[1][5]:\n","                print(\"Ваш питомец перекормлен!\")\n","                pets_and_status[1][2] = pets_and_status[1][5]\n","            else:\n","                pets_and_status[1][2] += 15\n","                print('Ему понравилось!')\n","\n","        else:\n","            print('Такого варианта нет!')\n","\n","    time.sleep(3)\n","    clear()\n","    m_menu()\n","\n","    return\n","\n","\n","def playing(pets_and_status):\n","    clear()\n","\n","    print(\"Давайте поиграем с питомцем!\\n\")\n","\n","    if pets_and_status[1][7] == \"Снеговик\":\n","        print(\"А как играть со снеговиком...\")\n","    else:\n","        if pets_and_status[1][7] == \"Собака\":\n","            print(\"1 - Кинуть палку (+15)\\n2 - Почесать за ухом (+20)\\n3 - Поиграть в догонялки (+25)\")\n","            a = int(input())\n","\n","            if a == 1:\n","                pets_and_status[1][3] += 15\n","                print('Ему понравилось!')\n","\n","            elif a == 2:\n","                pets_and_status[1][3] += 20\n","                print('Ему понравилось!')\n","\n","            elif a == 3:\n","                pets_and_status[1][3] += 25\n","                print('Ему понравилось!')\n","\n","            else:\n","                print('Такого варианта нет!')\n","\n","        if pets_and_status[1][7] == \"Кошка\":\n","            print(\"1 - Дать ей спокойно полежать (+6)\\n2 - Уступить место на диване (+13)\\n3 - Не мешать спокойно жить (+15)\")\n","            a = int(input())\n","\n","            if a == 1:\n","                pets_and_status[1][3] += 6\n","                print('Ему понравилось!')\n","\n","            elif a == 2:\n","                pets_and_status[1][3] += 13\n","                print('Ему понравилось!')\n","\n","            elif a == 3:\n","                pets_and_status[1][3] += 15\n","                print('Ему понравилось!')\n","\n","            else:\n","                print('Такого варианта нет!')\n","\n","        a = int(input())\n","\n","    time.sleep(3)\n","    clear()\n","    m_menu()\n","\n","    return\n","\n","\n","def sleep(pets_and_status):\n","    clear()\n","\n","    if pets_and_status[1][7] == \"Снеговик\":\n","        print(\"Ну... Допустим, он спит...\")\n","    else:\n","        if pets_and_status[1][1] < pets_and_status[1][4]:\n","            if pets_and_status[1][1] * 2 > pets_and_status[1][4]:\n","                pets_and_status[1][1] = pets_and_status[1][4]\n","            else:\n","                pets_and_status[1][1] = pets_and_status[1][1] * 2\n","\n","        print(\"Ваш питомец выспался!\")\n","\n","\n","    time.sleep(3)\n","    clear()\n","    m_menu()\n","\n","    return\n","\n","\n","def m_menu():\n","    clear()\n","\n","    print(str('\\n' + pets_and_status[1][7]), str(pets_and_status[1][0]))\n","    print('Здоровье: ' + str(pets_and_status[1][1]) + '/' + str(pets_and_status[1][4]))\n","    print('Голод: ' + str(pets_and_status[1][2]) + '/' + str(pets_and_status[1][5]))\n","    print('Счастье: ' + str(pets_and_status[1][3]) + '/' + str(pets_and_status[1][6]))\n","\n","    a = int(input(\"\\nМЕНЮ\\n1 - Покормить\\n2 - Поиграть\\n3 - Уложить спать\\n\"))\n","\n","    if a == 1:\n","        eating(pets_and_status)\n","    elif a == 2:\n","        playing(pets_and_status)\n","    elif a == 3:\n","        sleep(pets_and_status)\n","    else:\n","        print('Такого варианта нет!')\n","\n","    time.sleep(1)\n","\n","    return\n","\n","\n","clear = lambda: os.system('cls')\n","pets_and_status = [[\"Имя\", \"Здоровье\", \"Голод\", \"Счастье\", \"Максимальное здоровье\", \"Максимальный голод\", \"Максимальное счастье\", \"Вид\"]]\n","\n","clear()\n","\n","main_load()\n","screensaver()\n","\n","new_pet(pets_and_status)\n","m_menu()"],"metadata":{"id":"hE7mF-HXpJLO","colab":{"base_uri":"https://localhost:8080/","height":339},"executionInfo":{"status":"error","timestamp":1734560947279,"user_tz":-300,"elapsed":33302,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"af4eef06-1d83-477f-d571-e2f660ebf136"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-c4c45159aa31>\u001b[0m in \u001b[0;36m<cell line: 252>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    250\u001b[0m \u001b[0;31m# screensaver()\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    251\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 252\u001b[0;31m \u001b[0mnew_pet\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpets_and_status\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    253\u001b[0m \u001b[0mm_menu\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-1-c4c45159aa31>\u001b[0m in \u001b[0;36mnew_pet\u001b[0;34m(pets_and_status)\u001b[0m\n\u001b[1;32m     55\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mnew_pet\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpets_and_status\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     56\u001b[0m     \u001b[0mclear\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 57\u001b[0;31m     \u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Введите имя питомца: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     58\u001b[0m     \u001b[0mgenus\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Выберите вид животного:\\n1 - Собака\\n2 - Кошка\\n3 - Снеговик\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"qZ7qFQnmssNd"}},{"cell_type":"markdown","source":["Рыцарь и дракон\n","\n","Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом\n","\n","Требования:\n","\n","- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)\n","- Управление персонажем и мини сюжет\n","- Создание дракона (Имя, информация о здоровье и уроне)\n","- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)\n","- Реализовать бой между драконом и рыцарем"],"metadata":{"id":"UaccTe7ltNvg"}},{"cell_type":"code","source":[],"metadata":{"id":"LCcxp5Q0srjY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 3\n"],"metadata":{"id":"N8oFiEXol3e2"}},{"cell_type":"markdown","source":["Цель - создать менеджера команды Pokémon, который позволит пользователям:\n","\n","- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","- Удалять покемонов из их команды.\n","- Просматривать подробную информацию обо всех покемонах в команде.\n","- Находить покемона по имени.\n","- Устраивать тренировочный бой между двумя покемонами\n","\n","Для данной задачи используйте: https://pokeapi.co/\n"],"metadata":{"id":"9p4WQG_Vl7wB"}},{"cell_type":"code","source":[],"metadata":{"id":"NnGYp1MTqi5k"},"execution_count":null,"outputs":[]}]}