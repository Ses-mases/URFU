{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1TEBJaKANAI0JxDY268tNeKGpHMChb2sK","timestamp":1729158378312}],"collapsed_sections":["VrNrBpmocGRd","lpjJz-_YcJ-t","WT_v-vz1dUZJ","iHtMGt2icM7w","x6ff5nd0cUxD"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО:"],"metadata":{"id":"Bu5gIJfHNPHw"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"CbHI8c7cM9Eg"},"outputs":[],"source":["# Абрамов Семён"]},{"cell_type":"markdown","source":["# **Задание 1**"],"metadata":{"id":"VrNrBpmocGRd"}},{"cell_type":"markdown","source":["\n","\n","Дан словарь, содержащий имена и возраст людей, напишите программу выводящую возраст человека по имени\n","\n","Дано:\n","\n","```\n","{\"Alice\": 25, \"Bob\": 30, \"Charlie\": 35}\n","```\n","\n","Вввод:\n","\n","\n","```\n","Alice\n","```\n","\n","Вывод:\n","\n","\n","```\n","Alice 25\n","```\n"],"metadata":{"id":"XhV1bnm1bR2h"}},{"cell_type":"code","source":["names_and_ages = {\"Alice\": 25,\n","                  \"Bob\": 30,\n","                  \"Charlie\": 35}\n","\n","a = input(\"Введите имя: \")\n","\n","if a in names_and_ages:\n","  print(a, names_and_ages[a])\n","else:\n","  print(\"Такого имени нет\")"],"metadata":{"id":"PElJj6DvsgjD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729158564747,"user_tz":-300,"elapsed":3817,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"d996bdc5-71c2-4bfa-b725-9cefa29a0cc9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите имя: Семён\n","Такого имени нет\n"]}]},{"cell_type":"markdown","source":["# **Задание 2**\n"],"metadata":{"id":"lpjJz-_YcJ-t"}},{"cell_type":"markdown","source":["\n","\n","Дан список, состоящий из целых чисел, необходимо написать функцию считающую сумму всех положительных четных чисел списка\n","\n","Ввод:\n","\n","```\n","1, 2, 3, 4, 5, 6, 7, 8, 9\n","```\n","\n","Вывод:\n","\n","\n","```\n","20\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для суммирования чисел\n"],"metadata":{"id":"tMEsAB4rUiWW"}},{"cell_type":"code","source":["nums = input(\"Введите список целых чисел через пробел: \")\n","nums = nums.split()\n","sum = 0\n","\n","for i in nums:\n","  if int(i) > 0 and int(i) % 2 == 0:\n","    sum += int(i)\n","\n","print(sum)"],"metadata":{"id":"wDNUFLeqNQS_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729158841018,"user_tz":-300,"elapsed":6167,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"03dd9031-8af5-4f49-bf5d-70b2b3e049c2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите список целых чисел через пробел: 1 2 3 4 5 6 7 8 9\n","20\n"]}]},{"cell_type":"markdown","source":["# **Задание 3**"],"metadata":{"id":"WT_v-vz1dUZJ"}},{"cell_type":"markdown","source":["Дан словарь, содержащий название фрукта и его цвет, выведите список всех желтых фруктов\n","\n","\n","Дано:\n","\n","```\n","fruits_and_colors = {\n","    \"apple\": \"red\",\n","    \"banana\": \"yellow\",\n","    \"mango\": \"yellow\",\n","    \"orange\": \"orange\",\n","    \"lemon\": \"yellow\",\n","    \"grape\": \"purple\"\n","}\n","```\n","\n","Вывод:\n","\n","\n","```\n","Yellow fruits:\n","banana\n","lemon\n","mango\n","```\n","\n"],"metadata":{"id":"ZI5Xeh2DdXgF"}},{"cell_type":"code","source":["fruits_and_colors = {\"apple\": \"red\",\n","                     \"banana\": \"yellow\",\n","                     \"mango\": \"yellow\",\n","                     \"orange\": \"orange\",\n","                     \"lemon\": \"yellow\",\n","                     \"grape\": \"purple\"}\n","\n","print(\"Yellow fruits:\")\n","for i in fruits_and_colors:\n","  if fruits_and_colors[i] == \"yellow\":\n","    print(i)\n","\n"],"metadata":{"id":"aNzFTkhKdkTG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729160026188,"user_tz":-300,"elapsed":273,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"dfed775d-0216-4525-ecc2-8a93f7c9ddd1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Yellow fruits:\n","banana\n","mango\n","lemon\n"]}]},{"cell_type":"markdown","source":["# **Задание 4**\n"],"metadata":{"id":"iHtMGt2icM7w"}},{"cell_type":"markdown","source":["\n","\n","Дан словарь, необходимо написать функцию меняющую ключ и значение местами\n","\n","Дано:\n","\n","\n","```\n","{\"a\": 1, \"b\": 2, \"c\": 3}\n","```\n","\n","Вывод:\n","\n","```\n","{1: 'a', 2: 'b', 3: 'c'}\n","```\n","\n"],"metadata":{"id":"rS3THsnBQ_EB"}},{"cell_type":"code","source":["nums = {\"a\": 1,\n","        \"b\": 2,\n","        \"c\": 3}\n","nums_2 = {}\n","a = 0\n","\n","for i in nums:\n","  a += 1\n","  nums_2[a] = i\n","\n","print(nums_2)\n"],"metadata":{"id":"MNRusyLDcQ59","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729159888277,"user_tz":-300,"elapsed":280,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"48a7d64e-731b-44f5-9631-e0b795076549"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1: 'a', 2: 'b', 3: 'c'}\n"]}]},{"cell_type":"markdown","source":["# **Задание 5**"],"metadata":{"id":"x6ff5nd0cUxD"}},{"cell_type":"markdown","source":["Дан список слов, неограниченной длинны, сформируйте словарь, где в качестве ключа будет слово, а в качестве значения количество слов\n","\n","**Критерии**\n","\n","\n","*   Словарь необходимо отсортировать по убыванию количества элементов в списке.\n","*   Подсчет элементов должен быть реализован в отдельной функции\n","*   Сортировка пары `ключ:значение` должна быть реализована также в виде отдельной функции\n","\n","\n","\n","\n","Дано:\n","```\n","['apple','banana','orange','apple','apple','banana']\n","```\n","\n","\n","Вывод:\n","```\n","{'apple':3, 'banana': 2, 'orange': 1}\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для сортировки\n","*   Использование готовых функций для подсчета элементов\n","\n"],"metadata":{"id":"ypQNHOG4NQz3"}},{"cell_type":"code","source":["list_fruits = ['apple', 'banana', 'orange', 'apple', 'apple', 'banana']\n","buw = {}\n","dictionary = {}\n","check = 0\n","\n","for i in range(len(list_fruits)):\n","    for j in range(len(list_fruits)):\n","        if list_fruits[i] == list_fruits[j]:\n","            check += 1\n","    buw[list_fruits[i]] = check\n","    check = 0\n","\n","list_fruits.clear()\n","check = 0\n","\n","for k in buw:\n","    if check < buw[k]:\n","        list_fruits.insert( 0, [k, buw[k]] )\n","    else:\n","        list_fruits.append( [k, buw[k]] )\n","    check = buw[k]\n","\n","for i in range(len(list_fruits)):\n","    dictionary[list_fruits[i][0]] = list_fruits[i][1]\n","\n","print(dictionary)"],"metadata":{"id":"J10PjdVQUbyq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Задание 6**"],"metadata":{"id":"d7fDUr2WcY_G"}},{"cell_type":"markdown","source":["Дан словарь, содержащий информацию о людях, необходимо:\n","\n","\n","\n","*   Вывести всех людей старше 30 лет\n","*   Вывести список городов и количество людей из словаря проживающих в них\n","*   Вывести список профессий и список людей для каждой профессии\n","\n","**Критерии**\n","\n","Каждый из пунктов необходимо реализовать в виде функции\n","\n"],"metadata":{"id":"m11qdVhSWBi7"}},{"cell_type":"code","source":["people_info = {\n","    \"Alice\": {\"age\": 25, \"city\": \"New York\", \"occupation\": \"Engineer\"},\n","    \"Bob\": {\"age\": 30, \"city\": \"Los Angeles\", \"occupation\": \"Designer\"},\n","    \"Charlie\": {\"age\": 35, \"city\": \"Chicago\", \"occupation\": \"Teacher\"},\n","    \"Diana\": {\"age\": 28, \"city\": \"Miami\", \"occupation\": \"Doctor\"},\n","    \"Ethan\": {\"age\": 40, \"city\": \"Seattle\", \"occupation\": \"Chef\"},\n","    \"Frank\": {\"age\": 32, \"city\": \"Atlanta\", \"occupation\": \"Lawyer\"},\n","    \"Gabriella\": {\"age\": 29, \"city\": \"San Francisco\", \"occupation\": \"Software Engineer\"},\n","    \"Harrison\": {\"age\": 38, \"city\": \"Denver\", \"occupation\": \"Architect\"},\n","    \"Isabella\": {\"age\": 26, \"city\": \"Washington D.C.\", \"occupation\": \"Journalist\"},\n","    \"Julian\": {\"age\": 42, \"city\": \"Miami\", \"occupation\": \"Musician\"},\n","    \"Kate\": {\"age\": 31, \"city\": \"Philadelphia\", \"occupation\": \"Nurse\"},\n","    \"Lucas\": {\"age\": 36, \"city\": \"Nashville\", \"occupation\": \"Businessman\"},\n","    \"Mia\": {\"age\": 27, \"city\": \"Atlanta\", \"occupation\": \"Artist\"},\n","    \"Natalie\": {\"age\": 39, \"city\": \"Portland\", \"occupation\": \"Writer\"},\n","    \"Oliver\": {\"age\": 44, \"city\": \"Minneapolis\", \"occupation\": \"Professor\"},\n","    \"Penelope\": {\"age\": 33, \"city\": \"San Diego\", \"occupation\": \"Marketing Manager\"},\n","    \"Quincy\": {\"age\": 41, \"city\": \"Nashville\", \"occupation\": \"Singer\"},\n","    \"Rachel\": {\"age\": 34, \"city\": \"Cleveland\", \"occupation\": \"Teacher\"},\n","    \"Sophia\": {\"age\": 29, \"city\": \"Nashville\", \"occupation\": \"Engineer\"},\n","    \"Tessa\": {\"age\": 37, \"city\": \"Miami\", \"occupation\": \"Lawyer\"}\n","}\n","\n","city_list = []\n","occupation_list = {}\n","list_of_employees = {}\n","\n","# Старше 30\n","print(\"Люди старшке 30ти лет:\")\n","for i in people_info:\n","    age = people_info[i]\n","    if age[\"age\"] > 30:\n","        print(i)\n","print(\"\\n\")\n","\n","# Количество людей\n","for i in people_info:\n","    city = people_info[i]\n","    city_list.append(city[\"city\"])\n","city_dict = {}\n","check = 0\n","for i in range(len(city_list)):\n","    for j in range(len(city_list)):\n","        if city_list[i] == city_list[j]:\n","            check += 1\n","    city_dict[city_list[i]] = check\n","    check = 0\n","for i in city_dict:\n","    print(str(i) + \"  --  Люди: \" + str(city_dict[i]))\n","print(\"\\n\")\n","\n","# Профессии и работники\n","print(\"Профессии и работники:\")\n","for i in people_info:\n","    occupation = people_info[i]\n","    if not occupation[\"occupation\"] in occupation_list:\n","        occupation_list[occupation[\"occupation\"]] = \"\"\n","    occupation_list[occupation[\"occupation\"]] += str(i) + \" \"\n","\n","for i in occupation_list:\n","    print(str(i) + \"s: \" + str(occupation_list[i]))"],"metadata":{"id":"lSNtB39OWtFl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729165619442,"user_tz":-300,"elapsed":400,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"53973225-546e-48a9-d557-d1f6e9f9145b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Люди старшке 30ти лет:\n","Charlie\n","Ethan\n","Frank\n","Harrison\n","Julian\n","Kate\n","Lucas\n","Natalie\n","Oliver\n","Penelope\n","Quincy\n","Rachel\n","Tessa\n","\n","\n","New York  --  Люди: 1\n","Los Angeles  --  Люди: 1\n","Chicago  --  Люди: 1\n","Miami  --  Люди: 3\n","Seattle  --  Люди: 1\n","Atlanta  --  Люди: 2\n","San Francisco  --  Люди: 1\n","Denver  --  Люди: 1\n","Washington D.C.  --  Люди: 1\n","Philadelphia  --  Люди: 1\n","Nashville  --  Люди: 3\n","Portland  --  Люди: 1\n","Minneapolis  --  Люди: 1\n","San Diego  --  Люди: 1\n","Cleveland  --  Люди: 1\n","\n","\n","Профессии и работники:\n","Engineers: Alice Sophia \n","Designers: Bob \n","Teachers: Charlie Rachel \n","Doctors: Diana \n","Chefs: Ethan \n","Lawyers: Frank Tessa \n","Software Engineers: Gabriella \n","Architects: Harrison \n","Journalists: Isabella \n","Musicians: Julian \n","Nurses: Kate \n","Businessmans: Lucas \n","Artists: Mia \n","Writers: Natalie \n","Professors: Oliver \n","Marketing Managers: Penelope \n","Singers: Quincy \n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"qcLO5eQwXkNK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Задание 7**"],"metadata":{"id":"27IuB2YScezw"}},{"cell_type":"markdown","source":["Задание: Разработка системы отзывов о предметах\n","\n","Описание: Создать программу на Python для хранения и управления отзывами о предметах учебного курса. Программа должна позволять пользователям добавлять, просматривать и удалять отзывы, а также вычислять средний балл по заданному предмету.\n","\n","**Функционал:**\n","\n","*   Добавление отзыва и оценки:\n","   *   Пользователь может ввести название предмета, оценку (от 1 до 5) и текст отзыва.\n","   *   Отзывы должны храниться в структуре данных (например, словаре), где ключом будет название предмета, а значением - список отзывов (каждый отзыв может хранить оценку и комментарий).\n","*   Просмотр отзывов и оценок:\n","   *   Пользователь может запросить отзывы для указанного предмета.\n","   *   Если для указанного предмета есть отзывы, программа должна отобразить список всех отзывов и соответствующих оценок.\n","*   Удаление отзыва:\n","   *   Пользователь может удалить отзыв по индексу. Необходимо заранее уведомить пользователя о том, какие отзывы доступны для удаления.\n","   *   Программа должна обработать ситуацию, когда индекс введен неправильно.\n","*   Вычисление среднего балла по предмету:\n","   *   Пользователь может ввести название предмета, и программа должна вычислить и вывести средний балл по всем отзывам для этого предмета.\n","   *   Если отзывов нет, программа должна сообщить об этом.\n","\n","\n","**Критерии:**\n","\n","*   Код должен быть оформлен в виде функций\n","*   Необходимо обрабатывать неправильный ввод пользователя\n","*   Должны быть комментарии к функциям\n","*   Присутсвует весь дополнительный функционал\n","\n","\n","\n","**Опционально:**\n","\n","Предлагаю вам добавить свои критерии оценки или вопросы, на которые должен ответить студент, чтобы оценить пару\n","\n","\n"],"metadata":{"id":"Fd95-S9cYhct"}},{"cell_type":"code","source":["    # Добавление отзыва и оценки:\n","# Пользователь может ввести название предмета, оценку (от 1 до 5) и текст отзыва.\n","# Отзывы должны храниться в структуре данных (например, словаре), где ключом будет название предмета, а значением - список отзывов (каждый отзыв может хранить оценку и комментарий).\n","\n","    # Просмотр отзывов и оценок:\n","# Пользователь может запросить отзывы для указанного предмета.\n","# Если для указанного предмета есть отзывы, программа должна отобразить список всех отзывов и соответствующих оценок.\n","\n","    # Удаление отзыва:\n","# Пользователь может удалить отзыв по индексу. Необходимо заранее уведомить пользователя о том, какие отзывы доступны для удаления.\n","# Программа должна обработать ситуацию, когда индекс введен неправильно.\n","\n","    # Вычисление среднего балла по предмету:\n","# Пользователь может ввести название предмета, и программа должна вычислить и вывести средний балл по всем отзывам для этого предмета.\n","# Если отзывов нет, программа должна сообщить об этом.\n","\n","# Главное меню\n","def main_menu(option):\n","    print(\"Добро пожаловать на платформу оценки пар!\\nГЛАВНОЕ МЕНЮ\\n1 - Добавление отзыва и оценки\\n2 - Просмотр отзывов и оценок\\n3 - Удаление отзыва\\n4 - Средний балл предмета\")\n","    option = input(\"Введите номер необходимой функции: \")\n","\n","    if option == \"1\":\n","        adding()\n","    elif option == \"2\":\n","        viewing()\n","    elif option == \"3\":\n","        removal()\n","    elif option == \"4\":\n","        average_score()\n","    else:\n","        print(\"Такой функции нет\")\n","        main_menu(option)\n","\n","    return option\n","\n","\n","# ДОБАВЛЕНИЕ ОТЗЫВА ИЛИ ОЦЕНКИ\n","def adding():\n","    print(\"ДОБАВЛЕНИЕ ОТЗЫВА ИЛИ ОЦЕНКИ\")\n","\n","    return\n","\n","\n","# ПРОСМОТР ОТЗЫВОВ НА ПРЕДМЕТ\n","def viewing():\n","    print(\"ПРОСМОТР ОТЗЫВОВ НА ПРЕДМЕТ\")\n","\n","    return\n","\n","\n","# УДАЛЕНИЕ ОТЗЫВА\n","def removal():\n","    print(\"УДАЛЕНИЕ ОТЗЫВА\")\n","\n","    return\n","\n","\n","# СРЕДНИЙ БАЛЛ ПРЕДМЕТА\n","def average_score():\n","    print(\"СРЕДНИЙ БАЛЛ ПРЕДМЕТА\")\n","\n","    return\n","\n","\n","base_reviews = [[\"Предмет\", \"Оценка\", \"Отзыв\", \"id человека\"]]\n","base_lessons = [[\"Предмет\", \"Средний балл\", \"Рост рейтинга\", \"Количество отзывов\"]]\n","base_student = [[\"id человека\", \"Количество отзывов\"]]\n","\n","\n","\n","option = \"\"\n","\n","main_menu(option)"],"metadata":{"id":"kzucJrCUa0o7"},"execution_count":null,"outputs":[]}]}