{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ZwSBZ3XI_wE-I4fLWA5wTMNwpfTDz2ov","timestamp":1728553971273}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Введите ваше ФИО:"],"metadata":{"id":"k8oVfdwrMXyc"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"5mcBLsKMI1-5"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["***Дисклеймер***\n","\n","В данной практике запрещено использования функций:\n","\n","\n","*   sum()\n","*   min()\n","*   max()\n","*   average()\n","*   reversed()\n","*   sorted()\n","*   готовые функции или библиотеки\n"],"metadata":{"id":"8HbYUbm3Jw3o"}},{"cell_type":"markdown","source":["\n","**Задача 1:**\n","\n","\n","\n","Интернет-магазин предлагает следующие условия скидок:\n","\n","*   Для заказов больше 1000 единиц, клиент получает скидку 5%. Если клиент использует промокод SUPERDISCOUNT, он получает скидку 10% (вместо 5%).\n","*  Для заказов более 5000 единиц, клиент получает скидку 15%, а использование промокода SUPERDISCOUNT увеличивает скидку до 20% (вместо 15%).\n","\n","Этап 1:\n","Ввод:\n","```\n","Введите стоимость единицы товара: 5\n","Введите количество товара: 1001\n","Введите промокод: GiVEMEDISCONT\n","```\n","\n","Вывод:\n","\n","```\n","Ваша скидка: 5%\n","Итоговая сумма: 4754.75\n","```\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"HmX0c6YPJSQr"}},{"cell_type":"code","source":["def online_store(price, product, promocode):\n","    if product > 5000:\n","        if promocode == \"SUPERDISCOUNT\":\n","            sale = 20\n","        else:\n","            sale = 15\n","    elif product > 1000:\n","        if promocode == \"SUPERDISCOUNT\":\n","            sale = 10\n","        else:\n","            sale = 5\n","    else:\n","        sale = 1\n","\n","    sum_price = ((price * product) / 100) * (100 - sale)\n","\n","    print(\"Ваша скидка:\", str(sale) + \"%\")\n","    print(\"Итоговая сумма:\", sum_price)\n","\n","\n","price = int(input(\"Введите стоимость единицы товара: \"))\n","product = int(input(\"Введите количество товара: \"))\n","promocode = input(\"Введите промокод: \")\n","\n","\n","online_store(price, product, promocode)"],"metadata":{"id":"OAIMIpklMN5D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728555186068,"user_tz":-300,"elapsed":19737,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"643c07b8-67ad-4911-f1b4-9dc69171cc72"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите стоимость единицы товара: 5\n","Введите количество товара: 1001\n","Введите промокод: GiVEMEDISCONT\n","Ваша скидка: 5%\n","Итоговая сумма: 4754.75\n"]}]},{"cell_type":"markdown","source":["**Задача 2:**\n","\n","Этап 1:\n","Напишите программу способную отфильтровать список и вывести только положительные элементы\n","\n","\n","Ввод:\n","```\n","-1 5 1 2 -3\n","```\n","\n","Вывод:\n","\n","```\n","5 1 2\n","```\n","\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"eeRVWpuLNGJ0"}},{"cell_type":"code","source":["def list_nums(nums, list):\n","    for i in nums:\n","        if int(i) >= 0:\n","            list += str(i) + \" \"\n","    print(list)\n","\n","\n","nums = input(\"Введите ряд чисел через пробел: \")\n","nums = nums.split()\n","list = \"\"\n","\n","\n","list_nums(nums, list)"],"metadata":{"id":"Xbi6bL0WOE9N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728556096864,"user_tz":-300,"elapsed":5726,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"ec7d44b1-5cec-46f3-8943-2372dc5a9663"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите ряд чисел через пробел: 1 2 -3 -4 5\n","1 2 5 \n"]}]},{"cell_type":"markdown","source":["**Задача 3:**\n","\n","Этап 1:\n","Напишите программу реализующую Алгоритм Евклида\n","\n","\n","> Алгоритм Евклида – это алгоритм нахождения наибольшего общего делителя (НОД) пары целых чисел.\n","\n","\n","\n","Ввод:\n","```\n","30 18\n","```\n","\n","Вывод:\n","\n","```\n","6\n","```\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n"],"metadata":{"id":"lV-w6G-POa6F"}},{"cell_type":"code","source":[],"metadata":{"id":"X2n6fnd91yt7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"43Dl5tIpOZsu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Задача 4:**\n","\n","Этап 1:\n","Напишите функцию программу, которая принимает строку и возвращает список слов и количество их упомнинаний в предложении\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","apple banana apple\n","```\n","\n","Вывод:\n","\n","```\n","apple: 2,\n","banana: 1\n","```"],"metadata":{"id":"WIfPFxpsO0zL"}},{"cell_type":"code","source":["words = input(\"Введите слова через пробел: \")\n","words = words.split()\n","result = {}\n","\n","for i in words:\n","    if not i in result:\n","        result[i] = 1\n","    else:\n","        result[i] += 1\n","\n","print(result)\n"],"metadata":{"id":"DgsmFeW5Po_x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730038136052,"user_tz":-300,"elapsed":6508,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"7d8a7976-ec93-4be2-f561-6f91b56c989f"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите слова через пробел: apple banana apple\n","{'apple': 2, 'banana': 1}\n"]}]},{"cell_type":"markdown","source":["**Задача 5:**\n","\n","Этап 1:\n","Детектор анаграмм Напишите программу на Python, которая принимает в качестве входных данных две строки и проверяет, являются ли они анаграммами друг друга\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","listen, silent\n","```\n","\n","Вывод:\n","\n","```\n","True\n","```"],"metadata":{"id":"5BmIJLUZP9I-"}},{"cell_type":"code","source":[],"metadata":{"id":"7LNW8DuHQJwH","executionInfo":{"status":"ok","timestamp":1730038545641,"user_tz":-300,"elapsed":450,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["**Задача 6:**\n","\n","Шифр ​​Цезаря\n","\n","Напишите программу на Python, которая реализует шифр Цезаря, простой метод шифрования, который заменяет каждую букву буквой на фиксированное количество позиций вниз по алфавиту. Программа должна запрашивать у пользователя сообщение и значение сдвига, а затем шифровать и расшифровывать сообщение.\n","\n","Этап 1:\n","\n","Напишите код для реализации данной задачи\n","\n","Этап 2:\n","\n","Оформите код в виде нескольких функций:\n","\n","* Зашифровывает сообщение\n","* Расшифровывает сообщение"],"metadata":{"id":"-SIWYSq2QKBh"}},{"cell_type":"code","source":["# alphabet = [\"а\", \"б\", \"в\", \"г\", \"д\", \"е\", \"ё\",\n","#             \"ж\", \"з\", \"и\", \"й\", \"к\", \"л\", \"м\",\n","#             \"н\", \"о\", \"п\", \"р\", \"с\", \"т\", \"у\",\n","#             \"ф\", \"х\", \"ц\", \"ч\", \"ш\", \"щ\", \"ъ\",\n","#             \"ы\", \"ь\", \"э\", \"ю\", \"я\"]\n","\n","# quest = input(\"Вы хотите зашифровать(1) или расшифровать(2) слово? (введите нужную цифру): \")\n","# word = input(\"Введите слово, которое нужно зашифровать: \").lower()\n","# shift = int(input(\"С каким сдвигом будет выполняться шифрование?: \"))\n","# enc_word = \"\"\n","\n","# if quest == 1:\n","#     for i in range(len(word)):\n","#         if int(alphabet.index(word[i])) + shift > 32:\n","#             enc_word = enc_word + alphabet[((int(alphabet.index(word[i])) + shift) % 32) - 1]\n","#         else:\n","#             enc_word = enc_word + alphabet[int(alphabet.index(word[i])) + shift]\n","# elif quest == 2:\n","#     for i in range(len(word)):\n","#         if int(alphabet.index(word[i])) - shift < 0:\n","\n","#             enc_word = enc_word + alphabet[((int(alphabet.index(word[i])) - shift) % 32) - 1]\n","#         else:\n","#             enc_word = enc_word + alphabet[int(alphabet.index(word[i])) - shift]\n","\n","# print(enc_word)"],"metadata":{"id":"anThYirsQe6N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Задача 7**\n","\n","Задача: «Банковская система»\n","\n","Создайте программу Python, которая имитирует базовую банковскую систему. Система должна иметь следующие функции:\n","\n","Требования\n","*   Система должна позволять клиентам создавать счета и хранить их балансы.\n","*   Система должна позволять клиентам вносить и снимать деньги со своих счетов.\n","*   Система должна позволять клиентам проверять свой текущий баланс.\n","*   Система должна позволять клиентам переводить деньги между счетами.\n","*   Система должна отслеживать транзакции (депозиты, снятия и переводы) и иметь возможность печатать детали транзакций.\n","\n","\n","Задачи\n","1. Реализуйте банковскую систему, используя только базовые конструкции Python, такие как def, lists, if, elif и else, без классов или словарей.\n","Определите функции для создания счетов, внесения и снятия денег, получения балансов счетов, перевода денег между счетами, а также создания и печати транзакций.\n","2. Напишите основную функцию, которая демонстрирует использование банковской системы путем создания счетов, внесения и снятия денег и перевода денег между счетами.\n","3. Бонусное задание\n","Реализуйте способ хранения и печати истории транзакций для каждого счета.\n","\n","Ограничения\n","Не используйте классы или словари.\n","Используйте только базовые конструкции Python, такие как def, lists, if, elif и else.\n"],"metadata":{"id":"avFZRRXrQz9O"}},{"cell_type":"code","source":["def account_creation(account_base, number_of_accounts): # Создание счёта\n","    print(\"\\nНачинаем создание\")\n","    name_account = input(\"Введите имя счёта: \")\n","    number_of_accounts += 1\n","    id_account = (10 - int(len(str(number_of_accounts)))) * \"0\" + str(number_of_accounts)\n","    account_base.append([name_account, id_account, 0])\n","\n","    return account_base, number_of_accounts\n","\n","\n","def depositing_and_withdrawing_money(): # Внесение или снятие средств\n","    return\n","\n","\n","def account_balance(): # Баланс счёта\n","    return\n","\n","\n","def money_transfer(): # Перевод на другой счёт\n","    return\n","\n","\n","def creating_and_printing_transactions(): # История транзакций\n","    return\n","\n","\n","account_base = []\n","number_of_accounts = 0\n","\n","operation = input(\"МЕНЮ:\\n1 - Создание счёта\\n2 - Внесение и снятие средств\\n3 - Баланс счёта\\n4 - Перевод на другой счёт\\n5 - История операций\\n \\nКакая операция вам нужна? (введите номер услуги): \")\n","\n","if operation == \"1\":\n","    account_creation(account_base)\n","\n","elif operation == \"2\":\n","    print(\"\\nРазработка в процессе\")\n","elif operation == \"3\":\n","    print(\"\\nРазработка в процессе\")\n","elif operation == \"4\":\n","    print(\"\\nРазработка в процессе\")\n","elif operation == \"5\":\n","    print(\"\\nРазработка в процессе\")\n","else:\n","    print(\"\\nТакой операции не существует\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349},"id":"dWEW10zIRwjs","executionInfo":{"status":"error","timestamp":1728740708280,"user_tz":-300,"elapsed":13722,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"12ca1740-5d48-44fb-e418-bd996034b156"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["МЕНЮ:\n","1 - Создание счёта\n","2 - Внесение и снятие средств\n","3 - Баланс счёта\n","4 - Перевод на другой счёт\n","5 - История операций\n"," \n","Какая операция вам нужна? (введите номер услуги): 1\n"]},{"output_type":"error","ename":"TypeError","evalue":"account_creation() missing 1 required positional argument: 'number_of_accounts'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-9511f3ecbc77>\u001b[0m in \u001b[0;36m<cell line: 32>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0moperation\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"1\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 33\u001b[0;31m     \u001b[0maccount_creation\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maccount_base\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     34\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     35\u001b[0m \u001b[0;32melif\u001b[0m \u001b[0moperation\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"2\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: account_creation() missing 1 required positional argument: 'number_of_accounts'"]}]}]}