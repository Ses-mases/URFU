{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729762842937}],"collapsed_sections":["cFcrKfclKWh0","VxawR9NubT_F","y05x0eD0cVCC","vYM0LyxxdElN","hZW0NZ7SgTcp"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Абрамов Семён\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["dirty_list = input(\"Введите необходимый список через пробелы: \")\n","clear_list = dirty_list.split()\n","result = []\n","\n","for i in clear_list:\n","    if not i in result:\n","        result.append(i)\n","\n","print(' '.join(map(str, result)))"],"metadata":{"id":"ml5gnbPXbeju","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730034846196,"user_tz":-300,"elapsed":11508,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"39341fd0-9a3a-45fd-fa02-edc6004bde2a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите необходимый список через пробелы: apple banana apple 1 3 4 4 5\n","apple banana 1 3 4 5\n"]}]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["gap = input(\"Введите промежуток (два числа через пробел): \")\n","gap = gap.split()\n","numbers = []\n","\n","for i in range(int(gap[0]), int(gap[1]) + 1):\n","    count = 0\n","\n","    if i > 0:\n","        for j in range(1, int(i) + 1):\n","            if i % j == 0:\n","                count += 1\n","\n","    if count == 2:\n","        numbers.append(i)\n","\n","print(', '.join(map(str, numbers)))"],"metadata":{"id":"XSMJnLgrc6Bf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730034825590,"user_tz":-300,"elapsed":5417,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"5ed62479-bd24-4d41-ad64-880ac891e9ab"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите промежуток (два числа через пробел): 10 50\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","ollected_dictionary = {}\n","\n","for i in values:\n","    ollected_dictionary[keys[i - 1]] = i\n","\n","print(ollected_dictionary)"],"metadata":{"id":"CRvhHTjCdvjS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730034796758,"user_tz":-300,"elapsed":364,"user":{"displayName":"Semyon Abramov","userId":"15761524948708296849"}},"outputId":"139e24ef-80e6-4a84-def3-3628720cbb8c"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n"]}]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["# ДОДЕЛАТЬ!!!\n","# numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","# check = 0\n","# result = {'mean': 0, 'median': 0, 'mode': 0, 'sum': 0}\n","# sum = 0\n","# count = 0\n","# maximum_repetition = 0\n","\n","# for i in numbers:\n","#     sum += i\n","#     count += 1\n","\n","# result['mean'] = sum / count\n","# result['sum'] = sum\n","# result['median'] = numbers[(len(numbers)) // 2]\n","\n","# print(result)"],"metadata":{"id":"dW6jW_rjfuba"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["string_words = \"Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\"\n","string_words = string_words.replace('.', \"\").replace(',', \"\")\n","words = string_words.split()\n","\n","count = 0\n","max_count = 0\n","answer = [0, 1]\n","num = 0\n","\n","for i in words:\n","    num += 1\n","\n","    for symbol in i:\n","        count += 1\n","\n","    if count > max_count:\n","        max_count = count\n","        answer[0] = i\n","        answer[1] = num\n","\n","    count = 0\n","\n","print(\"Самое длинное слово с номером \" + str(answer[1]) + \": \" + str(answer[0]))"],"metadata":{"id":"rC5DpHHLsDYp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729685921584,"user_tz":-300,"elapsed":5,"user":{"displayName":"Вадим Стрельцов","userId":"11067832340591659958"}},"outputId":"06b6903f-04c2-492d-ef5e-adf628dc0e43"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["обязательны\n"]}]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["#     # Напишите программу, для управления оценками студентов, со следующими функциями:\n","# # Добавление информации о студенте и его оценках.\n","# # Подсчет среднего балла студента.\n","# # Получение списка всех студентов с их средними баллами.\n","# # Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","# def main_menu():\n","#     operation = int(input(\"\\nМЕНЮ:\\n1 - Добавление ученика\\n2 - Добавление оценки\\n3 - Вывод всего списка студентов\\n4 - Поиск студента по имени\\nВведите номер комманды: \"))\n","\n","#     if operation == 1:\n","#         print(\"\\nДобавление студента: \")\n","#         add_student()\n","#     elif operation == 2:\n","#         print(\"\\nДобавление оценки: \")\n","#         add_grades()\n","#     elif operation == 3:\n","#         print(\"\\nСписок всех студентов: \")\n","#         print_student_list()\n","#     elif operation == 4:\n","#         print(\"\\nПоиск студента: \")\n","#         search_student()\n","#     else:\n","#         print(\"Такой комманды нет\")\n","#     return\n","\n","# def add_student():\n","#     buw_average_core = \"\"\n","#     average_core = 0\n","\n","#     name = input(\"Введите имя: \")\n","\n","#     print(\"\\nДавайте введём оценки\\nВНИМАНИЕ!: Вводить стоит только значения от 2 до 5, иначе будет выведена ошибочная оценка!\")\n","#     grades_mathematics = input(\"Введите оценки по математике: \")\n","#     grades_computer_science = input(\"Введите оценки по информатике: \")\n","#     grades_physics = input(\"Введите оценки по физике: \")\n","\n","#     buw_average_core = buw_average_core + \" \" + grades_mathematics + \" \" + grades_computer_science + \" \" + grades_physics\n","#     buw_average_core = buw_average_core.split()\n","#     for i in buw_average_core:\n","#         average_core += int(i)\n","#     average_core /= int(len(buw_average_core))\n","\n","#     database.append([name, round(average_core, 1), grades_computer_science, grades_mathematics, grades_physics])\n","#     print(\"\\nУченик успешно добавлен!\")\n","\n","#     main_menu()\n","#     return database\n","\n","\n","# def add_grades():\n","#     if not database == []:\n","#         name = input(\"Введите имя студента которому вы хотите добавить оценку: \")\n","#         check_name = False\n","#         for i in range(len(database)):\n","#             if database[i][0] == name:\n","#                 check_name = True\n","#             else:\n","#                 check_name = False\n","\n","#     else:\n","#         print(\"На данный момент список учеников пуст\")\n","\n","#     main_menu()\n","#     return\n","\n","\n","# def print_student_list():\n","#     if not database == []:\n","#         for i in range(len(database)):\n","#             print(database[i][0], \"-\", database[i][1])\n","#     else:\n","#         print(\"На данный момент список учеников пуст\")\n","\n","#     main_menu()\n","#     return\n","\n","\n","# def search_student():\n","\n","#     return\n","\n","\n","# database = [[\"sas\", 5, \"5 5 5\", \"5 5\", \"5\"],\n","#             [\"ses\", 4, \"4 4 4\", \"4 4\", \"4\"]]\n","\n","# main_menu()"],"metadata":{"id":"cvhlltVbdyoL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":[],"metadata":{"id":"DhxyYwHwh2V4"},"execution_count":null,"outputs":[]}]}